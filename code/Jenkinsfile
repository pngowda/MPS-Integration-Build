node() {
	def buildFile     = './code/build.gradle'
	def buildWrapper  = './code/gradlew'
	def branchName    = "${env.BRANCH_NAME}"
	//setupEnvironment()
	//printParams()
	
		stage ('checkout'){ 
			echo "test"
			checkout scm
		}
		stage ('build'){
			echo "Building on branch: ${branchName}"
			echo "Building : ${env.JOB_NAME}"
			withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: '2bf4d7e9-37c7-4436-b459-b40187d8488a',
            usernameVariable: 'nexusUsername', passwordVariable: 'nexusPassword']])
			{
			echo "${nexusUsername}"
						
		    if(isUnix()) {
				sh "chmod +x ${buildWrapper}"
				sh "${buildWrapper} -b ${buildFile} buildrun"
			}
			else{
				bat "${buildWrapper} -b ${buildFile} buildrun"
			}
			}
		}

		stage ('test'){
			 echo "Running tests on branch: ${branchName}"
		try {
				if(isUnix()) {
					sh "chmod +x ${buildWrapper}"
					sh "${buildWrapper} -b ${buildFile} testrun"
				}
				else{
					bat "${buildWrapper} -b ${buildFile} testrun"
				}
				step([$class: 'JUnitResultArchiver', testResults: 'TEST-*.xml'])
		}
		catch(err) {
			echo "### There were test failures:\n${err}"
		}


		}
	}
	def setupEnvironment() {
		def javaHome = tool(name: 'Oracle JDK8 Autoinstall')
		def jobName = "${env.JOB_NAME}"
		script {
            env.CI_jdk_home = "${javaHome}"
			if(jobName){
				env.isCIEnabled= "true"
			}else{
				env.isCIEnabled= ""
			}
        }
	}


def printParams() {
    println "test"
}


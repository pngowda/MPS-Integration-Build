buildscript {
  repositories { mavenCentral() }
  dependencies { classpath 'org.ajoberstar:gradle-git:1.4.1' }
}

import org.ajoberstar.grgit.Grgit
import org.ajoberstar.gradle.git.tasks.*

task cloneGitRepo() {
  File dirIets3Os = new File('iets3.opensource')
  File dirIets3core = new File('iets3.core')
  File dirMbeddr = new File('mbeddr.core')
  def urlIets3Os="https://github.com/IETS3/iets3.opensource.git"
  def urlIets3Core="https://github.com/IETS3/iets3.core.git"
  def urlMbeddr="https://github.com/mbeddr/mbeddr.core.git"

  doLast {
    def cloneDirectory=System.getProperty("user.dir")

    if(dirIets3Os.exists())dirIets3Os.deleteDir()
    gitRepoClone(cloneDirectory,urlIets3Os)
    git_checkout_update(cloneDirectory+File.separator+dirIets3Os)

    //if(dirIets3core.exists())dirIets3core.deleteDir()
    //gitRepoClone(cloneDirectory,urlIets3Core)
    //git_checkout_update(cloneDirectory+File.separator+dirIets3core)

    if(dirMbeddr.exists())dirMbeddr.deleteDir()
    gitRepoClone(cloneDirectory,urlMbeddr)
    git_checkout_update(cloneDirectory+File.separator+dirMbeddr)
  }
}


def gitRepoClone(cloneDir,urlToClone){
  println "Cloning to directory: "+cloneDir
  def command = "git clone "+ urlToClone

  def proc = command.execute(null, new File(cloneDir))
  proc.waitFor()
  println "Process exit code: ${proc.exitValue()}"
  println "${proc.err.text}"
  println "${proc.in.text}"
}

def git_checkout_update(destinationFolder){
  System.setProperty("user.dir", new File(destinationFolder).getAbsolutePath())
  println "GIT project directory: "+destinationFolder
  def command1 = "git checkout master"
  def command2 = "git pull origin master"
  def command3 = "git checkout Integration-Build"
  def command4 = "git rebase master"
  def command5 = "git pull"
  def command6 = "git push origin Integration-Build"

  def proc1 = command1.execute(null, new File(System.getProperty("user.dir")))
  proc1.waitFor()
  println "Process exit code: ${proc1.exitValue()}"
  println "${proc1.err.text}"
  println "${proc1.in.text}"

  def proc2 = command2.execute(null, new File(System.getProperty("user.dir")))
  proc2.waitFor()
  println "Process exit code: ${proc2.exitValue()}"
  println "${proc2.err.text}"
  println "${proc2.in.text}"

  def proc3 = command3.execute(null, new File(System.getProperty("user.dir")))
  proc3.waitFor()
  println "Process exit code: ${proc3.exitValue()}"
  println "${proc3.err.text}"
  println "${proc3.in.text}"

  def proc4 = command4.execute(null, new File(System.getProperty("user.dir")))
  proc4.waitFor()
  println "Process exit code: ${proc4.exitValue()}"
  println "${proc4.err.text}"
  println "${proc4.in.text}"

  def proc5 = command5.execute(null, new File(System.getProperty("user.dir")))
  proc5.waitFor()
  println "Process exit code: ${proc5.exitValue()}"
  println "${proc5.err.text}"
  println "${proc5.in.text}"

  def proc6 = command6.execute(null, new File(System.getProperty("user.dir")))
  proc6.waitFor()
  println "Process exit code: ${proc6.exitValue()}"
  println "${proc6.err.text}"
  println "${proc6.in.text}"
}
